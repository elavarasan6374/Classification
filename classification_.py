# -*- coding: utf-8 -*-
"""classification_.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KZQ4jSAFSCSS0CBD60C8La5X55zI5vYm

import the library
"""

#import the library
import numpy as np
import pandas as pd

"""Read the dataset"""

df=pd.read_csv("/content/Admission_Predict.csv")
df

"""using the head function for data understanding"""

df.head()

"""describe function is used for understanding the value"""

df.describe()

"""Replace white spaces and lower the columns name"""

df.columns = df.columns.str.strip().str.replace(' ','_').str.lower()
df.head()

"""choose the training data and test data"""

X = df.loc[:,'gre_score':'research']
y = df['chance_of_admit'] >= .8

"""using the decision tree algorithm"""

#using the decision tree algorithm
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import tree

x_train, x_test, y_train, y_test = train_test_split(X, y, random_state=0, test_size = 0.2)
dtree = DecisionTreeClassifier(max_depth = 2, ccp_alpha = 0.01, criterion = 'gini')
dtree.fit(x_train, y_train)

"""Predict and check the results"""

from sklearn.metrics import accuracy_score

y_pred = dtree.predict(x_test)
print(dtree.score(x_test, y_test),
      accuracy_score(y_test, y_pred))

"""# Graphically represent the tree"""

tree.plot_tree(dtree,
               feature_names = x_train.columns,
               max_depth = 3,
               class_names = ['unlikely admit', 'likley admit'],
               label = 'root',
               filled = True
              )

"""List the rules behind the splits in the decision tree"""

print(tree.export_text(dtree, feature_names = X.columns.tolist()))

"""Calculate the Gini Impurity Score"""

def gini(data):
    data = pd.Series(data)
    return 1 - sum(data.value_counts(normalize=True)**2)

gi = gini(y_train)
print(f'Gini impurity at root: {round(gi,3)}')